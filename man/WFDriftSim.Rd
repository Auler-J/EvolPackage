% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WFDriftSim.R
\name{WFDriftSim}
\alias{WFDriftSim}
\title{Simulating generations of genetic drift in a Wright–Fisher (WF) population}
\usage{
WFDriftSim(N, nGens, p0 = 0.5, nSim = 1, plot = TRUE, printData = FALSE)
}
\arguments{
\item{N}{Number giving the effective size of the population}

\item{nGens}{Number of generations to be simulated.}

\item{p0}{Initial frequency of a given allele. As the simulated organism is
diploid, the other alleles frequency will be \code{1-(p0)}. Default value
is \code{0.5}.}

\item{nSim}{Number of simulations to be made. If decimals are inserted,
they will be rounded. Default value is \code{1}.}

\item{plot}{Logical indicating if simulations should be plotted as colored
lines. Each color represents a different population. Default value
is \code{TRUE}.}

\item{printData}{Logical indicating whether all simulation results should be
returned as a \code{data.frame}. Default value is \code{FALSE}.}
}
\value{
If \code{plot = TRUE}, plots the timeseries of all simulations,
with each line+color referring to a different simulation. Note that if
many simulations (generally more than 20) are simulated, colors might be
cycled and different simulation will have the same color. If
\code{printData = TRUE}, returns a \code{data.frame} with the
simulation results.
}
\description{
\code{WFDriftSim} simulates Wright–Fisher, diploid populations with a given
effective size through a certain number of generations.
}
\examples{
#Default values:
WFDriftSim(N = 5, nGens = 30)

#A population which has already fixed one of the alleles:
WFDriftSim(N = 5, nGens = 30, p0=1)

#Many populations::
WFDriftSim(N = 5, nGens = 30, p0=0.2, nSim=20)

######## continuing a previous simulation:
ngen_1stsim <- 10 # number of gens in the 1st sim:
sim1 <- WFDriftSim(N = 5, nGens = ngen_1stsim, p0=.2, nSim=20, 
plot = FALSE, printData = TRUE)
ngen_2ndsim <-15 # number of gens in the 2nd sim:
# now, note how we assigned p0:
sim2 <- WFDriftSim(N = 5, nGens = ngen_2ndsim, p0=sim1[,ncol(sim1)], 
plot = TRUE, nSim=20, printData = TRUE)

# if we want to merge both simulations, then we have to:
# remove first column of 2nd sim (because it repeats
# the last column of the 1st sim)
sim2 <- sim2[,-1]

# re-name 2nd sim columns:
colnames(sim2) <- paste0("gen", (ngen_1stsim+1):(ngen_1stsim+ngen_2ndsim))

#finally, merging both rounds of simulations:
all_sims <- cbind(sim1, sim2)
head(all_sims)

}
\author{
Matheus Januario, Dan Rabosky, Jennifer Auler
}
